---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Registro de Administrador - MEHLEJ">
  <main class="min-h-screen flex flex-col items-center justify-center bg-luxury-black text-luxury-white p-4">
    <div class="w-full max-w-md">
      <h1 class="text-4xl font-playfair font-bold text-luxury-gold mb-6 text-center">Registro de Administrador</h1>
      <p class="text-lg text-luxury-gold-light mb-8 text-center">Crea tu cuenta de administrador para acceder al panel de control.</p>
      
      <div class="bg-luxury-gray rounded-lg p-6">
        <form id="register-form" class="space-y-4">
          <div>
            <label for="name" class="block text-luxury-gold-light text-sm mb-2">Nombre Completo</label>
            <input 
              type="text" 
              id="name" 
              required
              class="w-full px-4 py-3 rounded bg-luxury-black text-luxury-white border border-luxury-gold focus:outline-none focus:ring-2 focus:ring-luxury-gold"
              placeholder="Tu nombre completo"
            />
          </div>
          
          <div>
            <label for="email" class="block text-luxury-gold-light text-sm mb-2">Correo Electrónico</label>
            <input 
              type="email" 
              id="email" 
              required
              class="w-full px-4 py-3 rounded bg-luxury-black text-luxury-white border border-luxury-gold focus:outline-none focus:ring-2 focus:ring-luxury-gold"
              placeholder="tu@email.com"
            />
          </div>
          
          <div>
            <label for="password" class="block text-luxury-gold-light text-sm mb-2">Contraseña</label>
            <input 
              type="password" 
              id="password" 
              required
              minlength="6"
              class="w-full px-4 py-3 rounded bg-luxury-black text-luxury-white border border-luxury-gold focus:outline-none focus:ring-2 focus:ring-luxury-gold"
              placeholder="Mínimo 6 caracteres"
            />
          </div>
          
          <div>
            <label for="confirm-password" class="block text-luxury-gold-light text-sm mb-2">Confirmar Contraseña</label>
            <input 
              type="password" 
              id="confirm-password" 
              required
              class="w-full px-4 py-3 rounded bg-luxury-black text-luxury-white border border-luxury-gold focus:outline-none focus:ring-2 focus:ring-luxury-gold"
              placeholder="Repite tu contraseña"
            />
          </div>
          
          <div id="register-error" class="text-red-400 text-sm hidden"></div>
          <div id="register-success" class="text-green-400 text-sm hidden"></div>
          
          <button 
            type="submit"
            class="w-full bg-luxury-gold text-luxury-black py-3 px-6 font-medium rounded hover:bg-luxury-gold-dark transition-colors duration-300"
          >
            Crear Cuenta
          </button>
        </form>
        
        <div class="mt-6 text-center">
          <p class="text-luxury-gold-light text-sm">
            ¿Ya tienes una cuenta? 
            <a href="/admin" class="text-luxury-gold hover:underline">Iniciar Sesión</a>
          </p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { auth } from '../lib/firebase';
  import { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';
  
  document.addEventListener('DOMContentLoaded', () => {
    const registerForm = document.getElementById('register-form');
    const errorElement = document.getElementById('register-error');
    const successElement = document.getElementById('register-success');
    
    registerForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const nameInput = document.getElementById('name');
      const emailInput = document.getElementById('email');
      const passwordInput = document.getElementById('password');
      const confirmPasswordInput = document.getElementById('confirm-password');
      const submitButton = e.target.querySelector('button[type="submit"]');
      
      const name = nameInput.value.trim();
      const email = emailInput.value.trim();
      const password = passwordInput.value;
      const confirmPassword = confirmPasswordInput.value;
      
      // Hide previous messages
      errorElement.classList.add('hidden');
      successElement.classList.add('hidden');
      
      // Validation
      if (!name || !email || !password || !confirmPassword) {
        showError('Por favor completa todos los campos.');
        return;
      }
      
      if (password !== confirmPassword) {
        showError('Las contraseñas no coinciden.');
        return;
      }
      
      if (password.length < 6) {
        showError('La contraseña debe tener al menos 6 caracteres.');
        return;
      }
      
      // Show loading state
      const originalText = submitButton.textContent;
      submitButton.textContent = 'Creando cuenta...';
      submitButton.disabled = true;
      
      try {
        // Create user with Firebase
        console.log('Creating user with Firebase...');
        const userCredential = await createUserWithEmailAndPassword(auth, email, password);
        
        // Update user profile with name
        console.log('Updating user profile...');
        await updateProfile(userCredential.user, {
          displayName: name
        });
        
        console.log('User created successfully:', userCredential.user);
        console.log('User email:', userCredential.user.email);
        console.log('User UID:', userCredential.user.uid);
        console.log('User display name:', userCredential.user.displayName);
        
        // Show success message
        showSuccess('¡Cuenta creada exitosamente! Redirigiendo al dashboard...');
        
        console.log('Redirecting to dashboard in 2 seconds...');
        // Redirect to admin dashboard
        setTimeout(() => {
          console.log('Executing redirect to /admin/dashboard');
          window.location.href = '/admin/dashboard';
        }, 2000);
        
      } catch (error) {
        console.error('Registration error:', error);
        console.error('Error code:', error.code);
        console.error('Error message:', error.message);
        
        let errorMessage = 'Error al crear la cuenta. Por favor intenta de nuevo.';
        
        // Provide specific error messages
        switch (error.code) {
          case 'auth/email-already-in-use':
            errorMessage = 'Ya existe una cuenta con este correo electrónico.';
            break;
          case 'auth/invalid-email':
            errorMessage = 'Correo electrónico inválido.';
            break;
          case 'auth/weak-password':
            errorMessage = 'La contraseña es demasiado débil.';
            break;
          case 'auth/network-request-failed':
            errorMessage = 'Error de conexión. Verifica tu internet.';
            break;
          case 'auth/invalid-api-key':
            errorMessage = 'Error de configuración de Firebase.';
            break;
        }
        
        showError(errorMessage);
      } finally {
        // Restore button state
        submitButton.textContent = originalText;
        submitButton.disabled = false;
      }
    });
    
    function showError(message) {
      errorElement.textContent = message;
      errorElement.classList.remove('hidden');
    }
    
    function showSuccess(message) {
      successElement.textContent = message;
      successElement.classList.remove('hidden');
    }
  });
</script> 